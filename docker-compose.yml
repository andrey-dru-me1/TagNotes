services:
  nginx-prod:
    extends:
      file: common-services.yml
      service: nginx
    profiles: [prod]
    depends_on: [react-prod]
  nginx-dev:
    extends:
      file: common-services.yml
      service: nginx
    profiles: [dev]
    depends_on: [react-dev]

  react-prod:
    extends:
      file: common-services.yml
      service: react
    profiles: [prod]
    command: bash -c "npm run build && npm start"
  react-dev:
    extends:
      file: common-services.yml
      service: react
    profiles: [dev]
    command: npm run dev

  migration:
    build: backend
    command: bash -c
      "bin/console --env prod --no-interaction doctrine:migrations:migrate
      && bin/console --env prod cache:clear"
    working_dir: /root/backend
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/root/backend

  fpm-prod:
    profiles: [prod]
    extends:
      file: common-services.yml
      service: fpm
    environment:
      - APP_ENV=prod
  fpm-dev:
    profiles: [dev]
    extends:
      file: common-services.yml
      service: fpm
    environment:
      - APP_ENV=dev

  pgadmin:
    image: dpage/pgadmin4
    volumes:
      - ./pgadmin:/var/lib/pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    depends_on:
      migration:
        condition: service_completed_successfully

  postgres:
    image: postgres:latest
    container_name: tagnotes_postgres
    user: postgres
    environment:
      PGDATA: /var/lib/postgresql/data
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
    ports:
      - 5432:5432
    volumes:
      - ./data:/var/lib/postgresql/data
    healthcheck:
      test: [CMD-SHELL, pg_isready, -d, postgres]
      interval: 1s
      timeout: 60s
      retries: 5
      start_period: 1s
